{"ast":null,"code":"var _jsxFileName = \"/home/salim/Bureau/Resto-app-test/src/Components/Commande.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPanierFromApi, deleteFoods, totalPrice, sumPrice } from \"../Action/Actions\";\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Quantité: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllPanier();\n  }\n\n  incriment(el) {\n    alert(\"incriment\");\n  }\n\n  decriment(el) {\n    alert(\"decriment\");\n  }\n\n  render() {\n    console.log(this.props.panier.id);\n    const {\n      panier\n    } = this.props;\n    const prixPanier = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, panier.reduce((a, el) => a + Number.parseFloat(el.prix * el.qtite), 0));\n    const foodPanier = panier.length ? panier.map(el => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"carte\",\n        key: el.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        title: \"Opps! Supprimer!\",\n        style: {\n          fontSize: \"x-large\",\n          cursor: \"pointer\"\n        },\n        role: \"img\",\n        \"aria-label\": \"Opps! Supprimer!\",\n        onClick: () => this.props.delete(el.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDDD1\\uFE0F\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, el.name), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"menu\",\n        src: el.photo,\n        alt: \"select food\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Prix : \", el.prix, \" DNT \"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Quantit\\xE9 :\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"qte\",\n        \"aria-label\": \"Ajouter 1\",\n        onClick: () => this.decriment({\n          \"photo\": el.photo,\n          \"name\": el.name,\n          \"compo\": el.compo,\n          \"qtite\": el.qtite++,\n          \"prix\": el.prix\n        }, el.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, \"\\u25C4\"), el.qtite, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"qte\",\n        \"aria-label\": \"Enlever 1\",\n        onClick: () => this.incriment(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"\\u25BA\"), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \"Total : \", el.prix * el.qtite, \" DNT\"));\n    }) : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"Votre liste de commande est vide\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), \"Veuillez choisir votre menu...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Vous avez Command\\xE9 ...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, foodPanier), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Prix Total de la Commande : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 39\n      }\n    }, prixPanier), \" TND\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    panier: state.foods.panier,\n    total: state.total,\n    sum: state,\n    quantité: state.quantité\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAllPanier: () => dispatch(getPanierFromApi()),\n  total: () => dispatch(totalPrice()),\n  sum: () => dispatch(sumPrice()),\n  delete: id => dispatch(deleteFoods(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","map":{"version":3,"sources":["/home/salim/Bureau/Resto-app-test/src/Components/Commande.js"],"names":["React","Component","connect","getPanierFromApi","deleteFoods","totalPrice","sumPrice","Order","state","Quantité","componentDidMount","props","getAllPanier","incriment","el","alert","decriment","render","console","log","panier","id","prixPanier","reduce","a","Number","parseFloat","prix","qtite","foodPanier","length","map","fontSize","cursor","delete","name","photo","compo","mapStateToProps","foods","total","sum","quantité","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getPanierFromApi,\n  deleteFoods,\n  totalPrice,\n  sumPrice,\n} from \"../Action/Actions\";\n\nclass Order extends Component {\n  state = {\n    Quantité: 1,\n  };\n  componentDidMount() {\n    this.props.getAllPanier();\n  }\n  incriment(el) {\n    alert(\"incriment\");\n\n  }\n\n\n  decriment(el) {\n    alert(\"decriment\");\n  }\n  render() {\n    console.log(this.props.panier.id);\n    const { panier } = this.props;\n    const prixPanier = (\n      <span>\n        {panier.reduce((a, el) => a + Number.parseFloat(el.prix * el.qtite), 0)}\n      </span>\n    );\n    const foodPanier = panier.length ? (\n      panier.map((el) => {\n        return (\n          <div className=\"carte\" key={el.id}>\n            <span\n              title=\"Opps! Supprimer!\"\n              style={{ fontSize: \"x-large\", cursor: \"pointer\" }}\n              role=\"img\"\n              aria-label=\"Opps! Supprimer!\"\n              onClick={() => this.props.delete(el.id)}\n            >\n              🗑️\n            </span>\n            <h2>{el.name}</h2>\n\n            <img className=\"menu\" src={el.photo} alt=\"select food\" />\n            <p>Prix : {el.prix} DNT </p>\n            <div>\n              Quantité :{\" \"}\n              <span\n                className=\"qte\"\n                aria-label=\"Ajouter 1\"\n                onClick={() => this.decriment({\n                  \"photo\": el.photo,\n                  \"name\": el.name,\n                  \"compo\": el.compo,\n                  \"qtite\": el.qtite++,\n                  \"prix\": el.prix,\n                 \n                },el.id)}\n              >\n                ◄\n              </span>\n              {el.qtite}{\" \"}\n              <span\n                className=\"qte\"\n                aria-label=\"Enlever 1\"\n                onClick={()=>this.incriment()}\n              >\n                ►\n              </span>{\" \"}\n            </div>\n            <p>Total : {el.prix * el.qtite} DNT</p>\n          </div>\n        );\n      })\n    ) : (\n      <h2>\n        Votre liste de commande est vide\n        <br />\n        Veuillez choisir votre menu...\n      </h2>\n    );\n    return (\n      <div>\n        <h1>Vous avez Commandé ...</h1>\n        <div className=\"top\">{foodPanier}</div>\n        <h2>\n          Prix Total de la Commande : <span>{prixPanier}</span> TND\n        </h2>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    panier: state.foods.panier,\n    total: state.total,\n    sum: state,\n    quantité: state.quantité,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllPanier: () => dispatch(getPanierFromApi()),\n  total: () => dispatch(totalPrice()),\n  sum: () => dispatch(sumPrice()),\n  delete: (id) => dispatch(deleteFoods(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n"]},"metadata":{},"sourceType":"module"}