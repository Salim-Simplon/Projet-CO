{"ast":null,"code":"import { GET_ALL_PRODUCT, ADD_PRODUCT, FILTER_ETAT } from \"../Action/types\";\nconst initialState = {\n  produits: []\n};\nexport default function productReducer(state = initialState, action) {\n  if (action.payload === FILTER_TYPE) {\n    return { ...state,\n      fetat: action.payload.fetat,\n      filteredItems: action.payload.items\n    };\n  }\n\n  if (action.payload === FILTER_ETAT) {\n    return { ...state,\n      fetat: action.payload.fetat,\n      filteredItems: action.payload.items\n    };\n  }\n\n  if (action.type === GET_ALL_PRODUCT) {\n    return action.payload;\n  }\n\n  if (action.type === ADD_PRODUCT) return { ...state,\n    products: { ...action.payload,\n      ...state.products\n    }\n  };\n  return state;\n}","map":{"version":3,"sources":["/home/salim/Bureau/Gorbej-app-test/src/Reducers/productReducer.js"],"names":["GET_ALL_PRODUCT","ADD_PRODUCT","FILTER_ETAT","initialState","produits","productReducer","state","action","payload","FILTER_TYPE","fetat","filteredItems","items","type","products"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,iBAA1D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGH,YAAhC,EAA8CI,MAA9C,EAAsD;AACnE,MAAGA,MAAM,CAACC,OAAP,KAAmBC,WAAtB,EAAkC;AAChC,WAAM,EACJ,GAAGH,KADC;AAEJI,MAAAA,KAAK,EAAEH,MAAM,CAACC,OAAP,CAAeE,KAFlB;AAGJC,MAAAA,aAAa,EAAEJ,MAAM,CAACC,OAAP,CAAeI;AAH1B,KAAN;AAKD;;AACD,MAAGL,MAAM,CAACC,OAAP,KAAmBN,WAAtB,EAAkC;AAChC,WAAM,EACJ,GAAGI,KADC;AAEJI,MAAAA,KAAK,EAAEH,MAAM,CAACC,OAAP,CAAeE,KAFlB;AAGJC,MAAAA,aAAa,EAAEJ,MAAM,CAACC,OAAP,CAAeI;AAH1B,KAAN;AAKD;;AACD,MAAIL,MAAM,CAACM,IAAP,KAAgBb,eAApB,EAAqC;AACnC,WAAOO,MAAM,CAACC,OAAd;AACD;;AACD,MAAID,MAAM,CAACM,IAAP,KAAgBZ,WAApB,EACE,OAAO,EAAE,GAAGK,KAAL;AAAYQ,IAAAA,QAAQ,EAAE,EAAE,GAAGP,MAAM,CAACC,OAAZ;AAAqB,SAAGF,KAAK,CAACQ;AAA9B;AAAtB,GAAP;AACF,SAAOR,KAAP;AACD","sourcesContent":["import { GET_ALL_PRODUCT, ADD_PRODUCT, FILTER_ETAT } from \"../Action/types\";\n\nconst initialState = {\n  produits: [],\n};\n\nexport default function productReducer(state = initialState, action) {\n  if(action.payload === FILTER_TYPE){\n    return{\n      ...state,\n      fetat: action.payload.fetat,\n      filteredItems: action.payload.items\n    }\n  }\n  if(action.payload === FILTER_ETAT){\n    return{\n      ...state,\n      fetat: action.payload.fetat,\n      filteredItems: action.payload.items\n    }\n  }\n  if (action.type === GET_ALL_PRODUCT) {\n    return action.payload;\n  }\n  if (action.type === ADD_PRODUCT)\n    return { ...state, products: { ...action.payload, ...state.products } };\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}