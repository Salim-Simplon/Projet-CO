{"ast":null,"code":"var _jsxFileName = \"/home/salim/Bureau/Gorbej-app-test/src/Components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { GetUsersFromApi, deleteUserFromApi } from \"../Action/userActions\"; // import { Link } from \"react-router-dom\";\n\nimport { Table, Thead, Tr, Th, Td, Tbody } from \"react-super-responsive-table\";\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\n\nclass Dashboard extends Component {\n  // state = {\n  //   el: null,\n  // };\n  componentDidMount() {\n    this.props.getAllUser();\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    console.log(user);\n    console.log(user.name);\n    const toutUsers = user.length ? user.map(el => {\n      return /*#__PURE__*/React.createElement(Tr, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Td, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, \" \", el.name, \" \"), /*#__PURE__*/React.createElement(Td, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, \" \", el.adress, \" \"), /*#__PURE__*/React.createElement(Td, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, \" \", el.mail, \" \"), /*#__PURE__*/React.createElement(Td, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, \" \", el.tel, \" \"), /*#__PURE__*/React.createElement(Td, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.props.delete(el._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 38\n        }\n      }, \"Supprimer\"), \" \"));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, \"La liste des clients n'est pas encore pr\\xEAte\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"TOUT LES CLIENTS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"T-T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Thead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tr, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Th, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Client\"), /*#__PURE__*/React.createElement(Th, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Adress\"), /*#__PURE__*/React.createElement(Th, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(Th, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Tel.\"), /*#__PURE__*/React.createElement(Th, {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Supprimer\"))), /*#__PURE__*/React.createElement(Tbody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, toutUsers))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAllUser: () => dispatch(GetUsersFromApi()),\n  delete: _id => dispatch(deleteUserFromApi(_id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/home/salim/Bureau/Gorbej-app-test/src/Components/Dashboard.js"],"names":["React","Component","connect","GetUsersFromApi","deleteUserFromApi","Table","Thead","Tr","Th","Td","Tbody","Dashboard","componentDidMount","props","getAllUser","render","user","console","log","name","toutUsers","length","map","el","adress","mail","tel","delete","_id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,uBAAnD,C,CACA;;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,KAAnC,QAAgD,8BAAhD;AACA,OAAO,iEAAP;;AAEA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAChC;AACA;AACA;AAEAW,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACA,UAAMC,SAAS,GAAGJ,IAAI,CAACK,MAAL,GAChBL,IAAI,CAACM,GAAL,CAAUC,EAAD,IAAQ;AACf,0BAEI,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,EAAD;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwBA,EAAE,CAACJ,IAA3B,MADF,eAEE,oBAAC,EAAD;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwBI,EAAE,CAACC,MAA3B,MAFF,eAGE,oBAAC,EAAD;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwBD,EAAE,CAACE,IAA3B,MAHF,eAIE,oBAAC,EAAD;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwBF,EAAE,CAACG,GAA3B,MAJF,eAKE,oBAAC,EAAD;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB;AAAQ,QAAA,OAAO,EAAE,MAAM;AAC1C,eAAKb,KAAL,CAAWc,MAAX,CAAkBJ,EAAE,CAACK,GAArB;AACD,SAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAvB,MALF,CAFJ;AAYD,KAbD,CADgB,gBAgBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAhBF;AAkBA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,CADF,eAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,SADH,CAXF,CADF,CAFF,CADF;AAuBD;;AAvD+B;;AA0DlC,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACd;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,UAAU,EAAE,MAAMkB,QAAQ,CAAC7B,eAAe,EAAhB,CADc;AAExCwB,EAAAA,MAAM,EAAGC,GAAD,IAASI,QAAQ,CAAC5B,iBAAiB,CAACwB,GAAD,CAAlB;AAFe,CAAf,CAA3B;;AAKA,eAAe1B,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { GetUsersFromApi, deleteUserFromApi } from \"../Action/userActions\";\n// import { Link } from \"react-router-dom\";\nimport { Table, Thead, Tr, Th, Td, Tbody } from \"react-super-responsive-table\";\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\n\nclass Dashboard extends Component {\n  // state = {\n  //   el: null,\n  // };\n\n  componentDidMount() {\n    this.props.getAllUser();\n  }\n\n  render() {\n    \n    const { user } = this.props;\n    console.log(user)\n    console.log(user.name)\n    const toutUsers = user.length ? (\n      user.map((el) => {\n        return (\n\n            <Tr>\n              <Td className=\"table\"> {el.name} </Td>\n              <Td className=\"table\"> {el.adress} </Td>\n              <Td className=\"table\"> {el.mail} </Td>\n              <Td className=\"table\"> {el.tel} </Td>\n              <Td className=\"table\"> <button onClick={() => {\n                  this.props.delete(el._id);\n                }}>Supprimer</button> </Td>\n            </Tr>\n        );\n      })\n    ) : (\n      <p>La liste des clients n'est pas encore prÃªte</p>\n    );\n    return (\n      <div>\n        <h1>TOUT LES CLIENTS</h1>\n        <div className=\"T-T\">\n          <Table className=\"table\">\n            <Thead>\n              <Tr>\n                <Th className=\"table\">Client</Th>\n                <Th className=\"table\">Adress</Th>\n                <Th className=\"table\">Mail</Th>\n                <Th className=\"table\">Tel.</Th>\n                <Th className=\"table\">Supprimer</Th>\n              </Tr>\n            </Thead>\n             \n            <Tbody>\n              {toutUsers}\n            </Tbody>\n             \n          </Table>\n        </div>        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllUser: () => dispatch(GetUsersFromApi()),\n  delete: (_id) => dispatch(deleteUserFromApi(_id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}